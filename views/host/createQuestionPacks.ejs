<!DOCTYPE html>
<html lang="vi">

<head>
    <title>Bamboo - Create Question Packs%></title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="/style/host/lobby.css">
    <link rel="stylesheet" type="text/css" href="/style/loader.css">
</head>

<body>
    <div id="loading-animation" class="loading">Loading&#8230;</div>

    <nav class="navbar navbar-light bg-light">
        <p>Create Question Packs </span></p>
        <ul class="nav justify-content-end">
            <li class="nav-item">
                <p>Host: <span id="hostname"> hostname </span></p>
            </li>
            <li class="nav-item">
                <button type="button" class="btn btn-outline-dark" onclick="signOut()">Sign out</button>
            </li>
        </ul>
    </nav>
    <div class="container-fluid">
        <div class="row left">
            <div class="col-sm-4">
                <div class="card">
                    <img src="./images/no-image-available.jpg" class="card-img-top" id="image" alt="..." onclick="setImage()">
                    <input accept=”.png” type='file' id="imgInp" hidden/>
                    <span id="imageUrl" hidden></span>
                    <div class="card-body">
                        <!-- <h5 class="card-title">Card title</h5> -->
                        <div class="input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text" style="width:8rem">Title</span>
                            </div>
                            <input type="text" class="form-control" id="title">
                        </div>
                        <div class="input-group desc-edit">
                            <div class="input-group-prepend">
                                <span class="input-group-text" style="width:8rem">Description</span>
                            </div>
                            <textarea class="form-control" id="description"></textarea>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-2 mt-3">
                        <button type="button" class="btn btn-outline-dark" onclick="back()">Back</button>
                    </div>
                    <div class="col-sm-8 mt-3 ">
                        
                    </div>
                    <div class="col-sm-2 mt-3 ">
                        <button type="button" class="btn btn-success" onclick="Submit()">Submit</button>
                    </div>
                </div>
            </div>
            <div class="col-sm-8">
                <div class="container-fluid">
                    <div class="container-fluid" id="question-list">
                        <div id="q1" class="row">
                            <div class="card col-sm-12">
                                <div class="card-body">
                                    <div class="row d-flex justify-content-between ml-1 mr-1">
                                        <div class="col-sm-2">
                                            <h5 class="card-title">Question</h5>
                                        </div>
                                        <div class="col-sm-3 mt-2">
                                            <img src="./images/no-image-available.jpg" class="card-img-top" id="imageQ1" alt="..."">
                                            <input id="qImage1" class="form-control qImage" type="text" />
                                        </div>
                                        <div class="col-sm-2">
                                            <div class="form-group">
                                                <label>Answer</label>
                                                <select class="form-control answer">
                                                    <option value="A" selected="selected">A</option>
                                                    <option value="B">B</option>
                                                    <option value="C">C</option>
                                                    <option value="D">D</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="col-sm-2">
                                            <div class="form-group">
                                                <label>Time limit</label>
                                                <input class="form-control limit" type="number" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group mt-2">
                                        <textarea class="form-control question-text-edit"
                                            id="exampleFormControlTextarea1" rows="3"></textarea>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="input-group mb-3">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text">A</span>
                                                </div>
                                                <input type="text" class="form-control A" />
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="input-group mb-3">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text">B</span>
                                                </div>
                                                <input type="text" class="form-control B" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="input-group">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text">C</span>
                                                </div>
                                                <input type="text" class="form-control C" />
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="input-group">
                                                <div class="input-group-prepend">
                                                    <span class="input-group-text">D</span>
                                                </div>
                                                <input type="text" class="form-control D" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-3 mt-3">
                            <button type="button" class="btn btn-success" onclick="AddQuestion()">Add</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
        integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
        crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
        integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
        crossorigin="anonymous"></script>
    <script src="https://www.gstatic.com/firebasejs/5.9.3/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/5.9.3/firebase-auth.js"></script>
    <script src="https://www.gstatic.com/firebasejs/5.9.4/firebase-database.js"></script>
    <script src="https://www.gstatic.com/firebasejs/5.9.4/firebase-storage.js"></script>

    <script src="/javascript/config.js"></script>
    <script>
        var storage = firebase.storage();
        var storageRef = storage.ref();
        var uname;
        var ucode;
        var $jq = jQuery.noConflict();
        // Check user signed-in
        firebase.auth().onAuthStateChanged(function (user) {
            if (user && !user.isAnonymous) {
                // User is signed in.
                var displayName = user.displayName;
                uname = displayName;
                var email = user.email;
                var emailVerified = user.emailVerified;
                var photoURL = user.photoURL;
                var isAnonymous = user.isAnonymous;
                var uid = user.uid;
                ucode = uid;
                var providerData = user.providerData;

                console.log('[DEBUG] user info:');
                console.log(user);

                // change hostname to displayName
                $jq("#hostname").text(displayName);
                // get new lobby id from Firebase

                // ...
            } else {
                // User is signed out.
                alert("You have not signed-in yet :(");
                // Redirect to authen
                window.location.href = '/authen/create';
                // ...
            }
        });

        function back() {
            var lobbyId = "<%= lobbyId %>";
            if (lobbyId == "") {
                // back to index
                window.location.href = '/';    
            }
            window.location.href = '/lobby/<%= lobbyId %>';
        }

        function setImage() {
            $jq('#imgInp').click();
        }

        function readURL(input) {

            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function(e) {
                    $jq('#image').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        function urlExists(url) {
            var http = new XMLHttpRequest();
            http.open('HEAD', url, false);
            http.send();
            return http.status!=404;
        }

        $jq(document).ready(function() {
            $jq("#imgInp").change(function() {
                readURL(this);
            });
            $jq("#loading-animation").hide();
            
            $jq("#qImage1").on('input', function() { 
                let qImageurl = $jq(this).val() // get the current value of the input field.
                $jq("#imageQ1").attr('src', qImageurl);
            });
        });

        var nextQ = 1;

        function AddQuestion() {
            nextQ++;
            let questionList = $jq("#question-list");
            childStr = "<div id=\"q"+ nextQ + "\" class=\"row\"> <div class=\"card col-sm-12\"> <div class=\"card-body\"> <div class=\"row d-flex justify-content-between ml-1 mr-1\"> <div class=\"col-sm-2\"> <h5 class=\"card-title\">Question</h5> <button type=\"button\" class=\"btn btn-danger\" onclick=\"Delete(" + nextQ + ")\">Delete</button></div> <div class=\"col-sm-3 mt-2\"> <img src=\"./images/no-image-available.jpg\" class=\"card-img-top qImage\" id=\"imageQ" + nextQ + "\" alt=\"...\"><input id=\"qImage" + nextQ + "\" class=\"form-control\" type=\"text\" /> </div> <div class=\"col-sm-2\"> <div class=\"form-group\"> <label>Answer</label> <select class=\"form-control answer\"> <option value=\"A\" selected=\"selected\">A</option> <option value=\"B\">B</option> <option value=\"C\">C</option> <option value=\"D\">D</option> </select> </div> </div> <div class=\"col-sm-2\"> <div class=\"form-group\"> <label>Time limit</label> <input class=\"form-control limit\" type=\"number\" /> </div> </div> </div> <div class=\"form-group mt-2\"> <textarea class=\"form-control question-text-edit\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea> </div> <div class=\"row\"> <div class=\"col-sm-6\"> <div class=\"input-group mb-3\"> <div class=\"input-group-prepend\"> <span class=\"input-group-text\">A</span> </div> <input type=\"text\" class=\"form-control A\" /> </div> </div> <div class=\"col-sm-6\"> <div class=\"input-group mb-3\"> <div class=\"input-group-prepend\"> <span class=\"input-group-text\">B</span> </div> <input type=\"text\" class=\"form-control B\" /> </div> </div> </div> <div class=\"row\"> <div class=\"col-sm-6\"> <div class=\"input-group\"> <div class=\"input-group-prepend\"> <span class=\"input-group-text\">C</span> </div> <input type=\"text\" class=\"form-control C\" /> </div> </div> <div class=\"col-sm-6\"> <div class=\"input-group\"> <div class=\"input-group-prepend\"> <span class=\"input-group-text\">D</span> </div> <input type=\"text\" class=\"form-control D\" /> </div> </div> </div> </div> </div> </div>";
            questionList.append(childStr);
            $jq("#qImage" + nextQ).on('input', function() { 
                let id = $jq(this).attr('id');
                var idNum = id[id.length -1];
                let qImageurl = $jq(this).val() // get the current value of the input field.
                $jq("#imageQ" + idNum).attr('src', qImageurl);

            });
        }

        function Delete(id) {
            let questionList = $jq("#q" + id);
            questionList.remove();
        }

        function imageExists(image_url){
            var http = new XMLHttpRequest();
            http.open('HEAD', image_url, false);
            http.send();
            return http.status != 404;
        }

        function CheckAndGet() {
            var json= {};
            // Title
            let title = $jq("#title").val(); 
            // Description
            let description = document.getElementById("description").value;
            // alert(description);
            if ($jq("#title").val() == "") {
                alert("Please enter title!");
                return false;
            }
            if (description == "") {
                alert("Please enter description!");
                return false;
            }

            let qList = $jq("#question-list").children();
            var questions = {};
            var validTimeLimit = true;
            qList.each(function(index) {
                let question = $jq(this).find("textarea").val();
                let imageURL = $jq(this).find(".qImage").val();
                let a = $jq(this).find(".A").val();
                let b = $jq(this).find(".B").val();
                let c = $jq(this).find(".C").val();
                let d = $jq(this).find(".D").val();
                let answer = $jq(this).find(".answer").val().toLowerCase();
                let limitText = $jq(this).find(".limit").val();
                let limit = parseInt(limitText);
                if (limit < 5) {
                    alert("Limit time is invalid at question " + index + " cant be " + limit);
                    validTimeLimit = false;
                }
                if (limitText == "") {
                    alert("Limit time is not set at question " + index + " can't be " + limit);
                    validTimeLimit = false;
                }
                questions['question' + (index + 1)] = {
                    question: question,
                    imageURL: imageURL,
                    a: a,
                    b: b,
                    c: c,
                    d: d,
                    limit: limit,
                    answer: answer,
                    status: 'end',
                };
            });
            if (validTimeLimit == false) {
                return false;
            }

            var authorName = $jq("#hostname").text();
            var packImageURL = $jq('#imageUrl').text();

            json = {
                title: title,
                authors: {
                    name: uname,
                    authorid1: ucode
                },
                imageURL: packImageURL,
                description: description,
                questions: questions
            };
            return json;
        }
        
        function Submit() {
            UploadImage($jq('#title').val());
            $jq("#loading-animation").show();
            setTimeout(function(){ 
                $jq("#loading-animation").hide();
                var json = CheckAndGet();
                if (json != false) {
                    // alert(JSON.stringify(json));
                }

                $jq.ajax({
                type: 'POST',
                url: '/createPacks',
                dataType: 'json',
                data: json,
                success: function(result) {
                    alert("Gửi thành công! " + result.response);
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    // alert(xhr.status);
                    alert(thrownError);
                }
            }) // End of AJAX

            }, 5000);

        }

        function UploadImage(fileInput) {
            // Upload image
            var file = $jq("#imgInp").prop('files')[0];
            // var packImageRef = storageRef.child("" + ucode + "/packsImage/" + $jq("#title").val());
            var uploadTask = storageRef.child("" + ucode + "/packsImage/" + fileInput).put(file);
            uploadTask.on('state_changed', function(snapshot){
                // Observe state change events such as progress, pause, and resume
                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded
                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                console.log('Upload is ' + progress + '% done');
                switch (snapshot.state) {
                    case firebase.storage.TaskState.PAUSED: // or 'paused'
                        console.log('Upload is paused');
                        break;
                    case firebase.storage.TaskState.RUNNING: // or 'running'
                        console.log('Upload is running');
                        break;
                }
                }, function(error) {
                    // Handle unsuccessful uploads
                }, function() {
                    // Handle successful uploads on complete
                    // For instance, get the download URL: https://firebasestorage.googleapis.com/...
                    uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {
                    console.log('File available at', downloadURL);
                    $jq('#imageUrl').text(downloadURL);
                });
            });
        }

        function signOut() {
            firebase.auth().signOut().then(function () {
                console.log('Signed Out');
            }, function (error) {
                console.error('Sign Out Error', error);
            });
        }

    </script>

</body>

</html>